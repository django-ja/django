# Japanese translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Django-ja <django-ja@googlegroups.com>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 0.95\n"
"Report-Msgid-Bugs-To: django-ja@googlegroups.com\n"
"POT-Creation-Date: 2012-11-24 14:15\n"
"PO-Revision-Date: 2012-11-24 14:10+0900\n"
"Last-Translator:  Yasushi Masuda <whosaysni@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# d1127ab34e2d4c798df0e24d06fed369
#: ../../static_files.txt:3
msgid "How to serve static files"
msgstr ""

# be11871afcbf40eaa360a462638afe2e
#: ../../static_files.txt:5
msgid ""
"Django itself doesn't serve static (media) files, such as images, style "
"sheets, or video. It leaves that job to whichever Web server you choose."
msgstr ""

# 69c75220b03f474dbfc1be6174932bf5
#: ../../static_files.txt:8
msgid ""
"The reasoning here is that standard Web servers, such as Apache_ and "
"lighttpd_, are much more fine-tuned at serving static files than a Web "
"application framework."
msgstr ""

# 5e7fd1c487634fd4877fecde242148e0
#: ../../static_files.txt:12
msgid ""
"With that said, Django does support static files **during development**. Use "
"the view ``django.views.static.serve`` to serve media files."
msgstr ""

# b285ad9c4b2b4ec3af08b30f8713c02c
#: ../../static_files.txt:19
msgid "The big, fat disclaimer"
msgstr ""

# 0c8b8bb10e794b89a81ce021ec4eec0c
#: ../../static_files.txt:21
msgid ""
"Using this method is **inefficient** and **insecure**. Do not use this in a "
"production setting. Use this only for development."
msgstr ""

# 9ff95edf8fe84086a0bd72d57671c87c
#: ../../static_files.txt:24
msgid ""
"For information on serving static files in an Apache production environment, "
"see the :doc:`Django mod_python documentation <modpython>`."
msgstr ""

# 283e97adbe7f4a3fbac9cd5552cb6b9f
#: ../../static_files.txt:28
msgid "How to do it"
msgstr ""

# 4d55ed41636d4303be3144b0f68744de
#: ../../static_files.txt:30
msgid "Just put this in your :doc:`URLconf <url_dispatch>`::"
msgstr ""

# 2634e6cd896047da9b5744140a2f5712
#: ../../static_files.txt:34
msgid ""
"...where ``site_media`` is the URL where your media will be rooted, and ``/"
"path/to/media`` is the filesystem root for your media."
msgstr ""

# d337b6d1f0ab44b8bbf7628ebf4a49d8
#: ../../static_files.txt:37
msgid ""
"You must pass a ``document_root`` parameter to indicate the filesystem root."
msgstr ""

# 7a315f142a05477a93f27a75b9975e43
#: ../../static_files.txt:39
msgid "Examples:"
msgstr ""

# 4278661900f24616b77372de1404d6dd
#: ../../static_files.txt:41
msgid ""
"The file ``/path/to/media/foo.jpg`` will be made available at the URL ``/"
"site_media/foo.jpg``."
msgstr ""

# 97b5fb74fcb547ab9c4e42052c9187ca
#: ../../static_files.txt:44
msgid ""
"The file ``/path/to/media/css/mystyles.css`` will be made available at the "
"URL ``/site_media/css/mystyles.css``."
msgstr ""

# 35e927895e664bf7a7cb0186d03c2db1
#: ../../static_files.txt:47
msgid ""
"The file ``/path/bar.jpg`` will not be accessible, because it doesn't fall "
"under the document root."
msgstr ""

# 5c7b309315f144c3a363c609cf8d3bd5
#: ../../static_files.txt:51
msgid "Directory listings"
msgstr ""

# 0bbf16ddd7bb47c885a00d086d84ddf8
#: ../../static_files.txt:53
msgid ""
"Optionally, you can pass a ``show_indexes`` parameter to the ``static."
"serve`` view. This is ``False`` by default. If it's ``True``, Django will "
"display file listings for directories."
msgstr ""

# ac2d822b86cf4ad59b9273e6c27703ae
#: ../../static_files.txt:57
msgid "Example::"
msgstr ""

# e6fc1edb9d9d46ff9e3f7dd28eae3d5c
#: ../../static_files.txt:61
msgid ""
"You can customize the index view by creating a template called ``static/"
"directory_index``. That template gets two objects in its context:"
msgstr ""

# a718d1345a2a438da15f58f1714d5beb
#: ../../static_files.txt:64
msgid "``directory`` -- the directory name (a string)"
msgstr ""

# 261a21c28f7e456093078df485442235
#: ../../static_files.txt:65
msgid "``file_list`` -- a list of file names (as strings) in the directory"
msgstr ""

# f6ca23689ca94f1c98868c91cef9638a
#: ../../static_files.txt:67
msgid "Here's the default ``static/directory_index`` template::"
msgstr ""

# ab7fc60eadeb4981a1accd992d8e2206
#: ../../static_files.txt:88
msgid "Limiting use to DEBUG=True"
msgstr ""

# 0088fced36fe4ce283b9ba2239871db7
#: ../../static_files.txt:90
msgid ""
"Because URLconfs are just plain Python modules, you can use Python logic to "
"make the static-media view available only in development mode. This is a "
"handy trick to make sure the static-serving view doesn't slip into a "
"production setting by mistake."
msgstr ""

# 2f35624dc5904000b8033ea855a392b0
#: ../../static_files.txt:95
msgid ""
"Do this by wrapping an ``if DEBUG`` statement around the ``django.views."
"static.serve`` inclusion. Here's a full example URLconf::"
msgstr ""

# fe22e79b6c3d44308be3e66efaaac7a8
#: ../../static_files.txt:113
msgid ""
"This code is straightforward. It imports the settings and checks the value "
"of the ``DEBUG`` setting. If it evaluates to ``True``, then ``site_media`` "
"will be associated with the ``django.views.static.serve`` view. If not "
"(``DEBUG == False``), then the view won't be made available."
msgstr ""

# 532040e6ed134f09ba38d2c322385c37
#: ../../static_files.txt:118
msgid ""
"Of course, the catch here is that you'll have to remember to set "
"``DEBUG=False`` in your production settings file. But you should be doing "
"that anyway."
msgstr ""
