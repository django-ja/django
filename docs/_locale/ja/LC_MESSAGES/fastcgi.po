# Japanese translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Django-ja <django-ja@googlegroups.com>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 0.95\n"
"Report-Msgid-Bugs-To: django-ja@googlegroups.com\n"
"POT-Creation-Date: 2012-11-24 14:15\n"
"PO-Revision-Date: 2012-11-24 14:10+0900\n"
"Last-Translator:  Yasushi Masuda <whosaysni@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# 5772442eb0bf4b729dc57bff2ec1c88a
#: ../../fastcgi.txt:3
msgid "How to use Django with FastCGI"
msgstr ""

# 8bef2a330ac74f6b8180a9cf84a6544a
#: ../../fastcgi.txt:5
msgid ""
"Although the :doc:`current preferred setup <modpython>` for running Django "
"is Apache_ with `mod_python`_, many people use shared hosting, on which "
"FastCGI is the only viable option. In some setups, FastCGI also allows "
"better security -- and, possibly, better performance -- than mod_python."
msgstr ""

# 025ca5743992407ebba0eea0215f2d95
#: ../../fastcgi.txt:10
msgid ""
"Essentially, FastCGI is an efficient way of letting an external application "
"serve pages to a Web server. The Web server delegates the incoming Web "
"requests (via a socket) to FastCGI, which executes the code and passes the "
"response back to the Web server, which, in turn, passes it back to the "
"client's Web browser."
msgstr ""

# c9dfe281836349ea9bf3f4e2753f3211
#: ../../fastcgi.txt:15
msgid ""
"Like mod_python, FastCGI allows code to stay in memory, allowing requests to "
"be served with no startup time. Unlike mod_python (or `mod_perl`_), a "
"FastCGI process doesn't run inside the Web server process, but in a "
"separate, persistent process."
msgstr ""

# c6589aa6ee6148feb6a01c69daea4d35
#: ../../fastcgi.txt:26
msgid ""
"The traditional ``mod_*`` arrangements in Apache embed various scripting "
"languages (most notably PHP, Python and Perl) inside the process space of "
"your Web server. Although this lowers startup time -- because code doesn't "
"have to be read off disk for every request -- it comes at the cost of memory "
"use. For mod_python, for example, every Apache process gets its own Python "
"interpreter, which uses up a considerable amount of RAM."
msgstr ""

# b13fea49d9184c108cbf967234b09939
#: ../../fastcgi.txt:33
msgid ""
"Due to the nature of FastCGI, it's even possible to have processes that run "
"under a different user account than the Web server process. That's a nice "
"security benefit on shared systems, because it means you can secure your "
"code from other users."
msgstr ""

# af67c0b7c55644aeb4b210401407ea09
#: ../../fastcgi.txt:39
msgid "Prerequisite: flup"
msgstr ""

# 6c3f6ced8b6d4c54b65a1923fd9e8cbb
#: ../../fastcgi.txt:41
msgid ""
"Before you can start using FastCGI with Django, you'll need to install "
"flup_, which is a Python library for dealing with FastCGI. Make sure to use "
"the latest Subversion snapshot of flup, as some users have reported stalled "
"pages with older flup versions."
msgstr ""

# 0a5b2bab3e66412882213d3e39166cfb
#: ../../fastcgi.txt:49
msgid "Starting your FastCGI server"
msgstr ""

# 3970b3e4fd464116bc70f892015ba491
#: ../../fastcgi.txt:51
msgid ""
"FastCGI operates on a client-server model, and in most cases you'll be "
"starting the FastCGI process on your own. Your Web server (be it Apache, "
"lighttpd, or otherwise) only contacts your Django-FastCGI process when the "
"server needs a dynamic page to be loaded. Because the daemon is already "
"running with the code in memory, it's able to serve the response very "
"quickly."
msgstr ""

# b9203b81c9494f2a990f17910c02de1d
#: ../../fastcgi.txt:59
msgid ""
"If you're on a shared hosting system, you'll probably be forced to use Web "
"server-managed FastCGI processes. See the section below on running Django "
"with Web server-managed processes for more information."
msgstr ""

# 90cbcdf2632c45d8a50ac25fa6bcfb85
#: ../../fastcgi.txt:63
msgid ""
"A Web server can connect to a FastCGI server in one of two ways: It can use "
"either a Unix domain socket (a \"named pipe\" on Win32 systems), or it can "
"use a TCP socket. What you choose is a manner of preference; a TCP socket is "
"usually easier due to permissions issues."
msgstr ""

# 0b0a95488f824083ba8cfc3aee280d47
#: ../../fastcgi.txt:68
msgid ""
"To start your server, first change into the directory of your project "
"(wherever your ``manage.py`` is), and then run ``manage.py`` with the "
"``runfcgi`` option::"
msgstr ""

# eb4c7adc14ad4405b0257253b2c0cfda
#: ../../fastcgi.txt:73
msgid ""
"If you specify ``help`` as the only option after ``runfcgi``, it'll display "
"a list of all the available options."
msgstr ""

# 04d169ee9f004fd294f80fcfb306c513
#: ../../fastcgi.txt:76
msgid ""
"You'll need to specify either a ``socket`` or both ``host`` and ``port``. "
"Then, when you set up your Web server, you'll just need to point it at the "
"host/port or socket you specified when starting the FastCGI server."
msgstr ""

# b16815ebfffc43f69aaf87843fbef810
#: ../../fastcgi.txt:81
msgid "Examples"
msgstr ""

# c1eb537c43194482858a458f9c25ce11
#: ../../fastcgi.txt:83
msgid "Running a threaded server on a TCP port::"
msgstr ""

# 20eb01182b154be8902360b7334a9394
#: ../../fastcgi.txt:87
msgid "Running a preforked server on a Unix domain socket::"
msgstr ""

# 882b874b8def4f968c96c1bd2a26abf7
#: ../../fastcgi.txt:91
msgid ""
"Run without daemonizing (backgrounding) the process (good for debugging)::"
msgstr ""

# 028930c4e11b4ed0829c3483392fb710
#: ../../fastcgi.txt:96
msgid "Stopping the FastCGI daemon"
msgstr ""

# 2e7ab95f074447a09ba8bff86f0e4e26
#: ../../fastcgi.txt:98
msgid ""
"If you have the process running in the foreground, it's easy enough to stop "
"it: Simply hitting ``Ctrl-C`` will stop and quit the FastCGI server. "
"However, when you're dealing with background processes, you'll need to "
"resort to the Unix ``kill`` command."
msgstr ""

# 7bef95574bf74ba58bff8f2b6678c550
#: ../../fastcgi.txt:103
msgid ""
"If you specify the ``pidfile`` option to your ``manage.py runfcgi``, you can "
"kill the running FastCGI daemon like this::"
msgstr ""

# c255de35dd2e4fe6bfdd716b0bd4b474
#: ../../fastcgi.txt:108
msgid "...where ``$PIDFILE`` is the ``pidfile`` you specified."
msgstr ""

# 164508ea266f4d2e9e65d3f095f211ec
#: ../../fastcgi.txt:110
msgid ""
"To easily restart your FastCGI daemon on Unix, try this small shell script::"
msgstr ""

# e593a82ac208451ab1eddb472058fc6d
#: ../../fastcgi.txt:130
msgid "Apache setup"
msgstr ""

# 6f08fca209d945339ff2e37b6cc58ffb
#: ../../fastcgi.txt:132
msgid ""
"To use Django with Apache and FastCGI, you'll need Apache installed and "
"configured, with `mod_fastcgi`_ installed and enabled. Consult the Apache "
"documentation for instructions."
msgstr ""

# b28b3eb2d5114edb801d0e69fef54a69
#: ../../fastcgi.txt:136
msgid ""
"Once you've got that set up, point Apache at your Django FastCGI instance by "
"editing the ``httpd.conf`` (Apache configuration) file. You'll need to do "
"two things:"
msgstr ""

# 646f75ec7ed841019112b0e17576dc77
#: ../../fastcgi.txt:140
msgid ""
"Use the ``FastCGIExternalServer`` directive to specify the location of your "
"FastCGI server."
msgstr ""

# e6c3143b53554278bb5ac9d40b0a9752
#: ../../fastcgi.txt:142
msgid "Use ``mod_rewrite`` to point URLs at FastCGI as appropriate."
msgstr ""

# 989095b5784c4f6cb952cd835befbeee
#: ../../fastcgi.txt:147
msgid "Specifying the location of the FastCGI server"
msgstr ""

# a7a50c1a5c014690811cff90ac8f6243
#: ../../fastcgi.txt:149
msgid ""
"The ``FastCGIExternalServer`` directive tells Apache how to find your "
"FastCGI server. As the `FastCGIExternalServer docs`_ explain, you can "
"specify either a ``socket`` or a ``host``. Here are examples of both::"
msgstr ""

# 0312731ec1fa43028686f1c928eb0a44
#: ../../fastcgi.txt:159
msgid ""
"In either case, the file ``/home/user/public_html/mysite.fcgi`` doesn't "
"actually have to exist. It's just a URL used by the Web server internally -- "
"a hook for signifying which requests at a URL should be handled by FastCGI. "
"(More on this in the next section.)"
msgstr ""

# 0c4122af96204e848aa89e0f0baef8b8
#: ../../fastcgi.txt:167
msgid "Using mod_rewrite to point URLs at FastCGI"
msgstr ""

# 4c0aa9057a504b6caa71480b87f9e824
#: ../../fastcgi.txt:169
msgid ""
"The second step is telling Apache to use FastCGI for URLs that match a "
"certain pattern. To do this, use the `mod_rewrite`_ module and rewrite URLs "
"to ``mysite.fcgi`` (or whatever you specified in the "
"``FastCGIExternalServer`` directive, as explained in the previous section)."
msgstr ""

# a8554582890743de909285c9f321a365
#: ../../fastcgi.txt:174
msgid ""
"In this example, we tell Apache to use FastCGI to handle any request that "
"doesn't represent a file on the filesystem and doesn't start with ``/media/"
"``. This is probably the most common case, if you're using Django's admin "
"site::"
msgstr ""

# 5717fed3649f4ccb8a9b595899953802
#: ../../fastcgi.txt:191
msgid "lighttpd setup"
msgstr ""

# ba7961f2cc5c4d9ea12483b9ebfbeb4a
#: ../../fastcgi.txt:193
msgid ""
"lighttpd is a lightweight Web server commonly used for serving static files. "
"It supports FastCGI natively and, thus, is a good choice for serving both "
"static and dynamic pages, if your site doesn't have any Apache-specific "
"needs."
msgstr ""

# bde33b2bbe5847e4b9ce3349e5992db4
#: ../../fastcgi.txt:197
msgid ""
"Make sure ``mod_fastcgi`` is in your modules list, somewhere after "
"``mod_rewrite`` and ``mod_access``, but not after ``mod_accesslog``. You'll "
"probably want ``mod_alias`` as well, for serving admin media."
msgstr ""

# 9e44e6b29d17435c9b9874fdaa12a12c
#: ../../fastcgi.txt:201
msgid "Add the following to your lighttpd config file::"
msgstr ""

# 5742b340324e48b39ba0ed94ee152bff
#: ../../fastcgi.txt:226
msgid "Running multiple Django sites on one lighttpd"
msgstr ""

# b367754fdfd648508c59343d0ea5e9f7
#: ../../fastcgi.txt:228
msgid ""
"lighttpd lets you use \"conditional configuration\" to allow configuration "
"to be customized per host. To specify multiple FastCGI sites, just add a "
"conditional block around your FastCGI config for each site::"
msgstr ""

# 6b9b6782c5514a93ae27902cc930d103
#: ../../fastcgi.txt:250
msgid ""
"You can also run multiple Django installations on the same site simply by "
"specifying multiple entries in the ``fastcgi.server`` directive. Add one "
"FastCGI host for each."
msgstr ""

# bd61db8662994167a7b4fed6ce7da23b
#: ../../fastcgi.txt:255
msgid "Running Django on a shared-hosting provider with Apache"
msgstr ""

# b54456583e0043d1bd9630f299197a60
#: ../../fastcgi.txt:257
msgid ""
"Many shared-hosting providers don't allow you to run your own server daemons "
"or edit the ``httpd.conf`` file. In these cases, it's still possible to run "
"Django using Web server-spawned processes."
msgstr ""

# 5445664f675340c58270d90cd0932ed9
#: ../../fastcgi.txt:263
msgid ""
"If you're using Web server-spawned processes, as explained in this section, "
"there's no need for you to start the FastCGI server on your own. Apache will "
"spawn a number of processes, scaling as it needs to."
msgstr ""

# 39d3923b975e476399dda91fa481fc96
#: ../../fastcgi.txt:267
msgid "In your Web root directory, add this to a file named ``.htaccess`` ::"
msgstr ""

# bdc81781e0224bb3bea7aa290c8a520f
#: ../../fastcgi.txt:274
msgid ""
"Then, create a small script that tells Apache how to spawn your FastCGI "
"program. Create a file ``mysite.fcgi`` and place it in your Web directory, "
"and be sure to make it executable ::"
msgstr ""

# 15cb3ad32c954e7a837b0551ace1c0d4
#: ../../fastcgi.txt:294
msgid "Restarting the spawned server"
msgstr ""

# 1e321d72060f4fd2b946e715cebbaa37
#: ../../fastcgi.txt:296
msgid ""
"If you change any Python code on your site, you'll need to tell FastCGI the "
"code has changed. But there's no need to restart Apache in this case. "
"Rather, just reupload ``mysite.fcgi``, or edit the file, so that the "
"timestamp on the file will change. When Apache sees the file has been "
"updated, it will restart your Django application for you."
msgstr ""

# 1039989723a34b8e8da689bb9074767e
#: ../../fastcgi.txt:302
msgid ""
"If you have access to a command shell on a Unix system, you can accomplish "
"this easily by using the ``touch`` command::"
msgstr ""
